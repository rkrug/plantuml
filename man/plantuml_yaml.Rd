% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plantuml_file.R
\name{plantuml_yaml}
\alias{plantuml_yaml}
\title{Convert yaml file to uml graph}
\usage{
plantuml_yaml(file, text, preamble = "", ...)
}
\arguments{
\item{file}{file name of the yaml file. The function does \strong{not} do any
checking if the file is a yaml file!}

\item{text}{yaml text to be converted. The function does \strong{not} do any
checking if the file is valid yaml!}

\item{preamble}{text to be inserted after the \verb{@startyaml} and before the
actual yaml. For example style and highlight info. See
\url{https://plantuml.com/yaml} for further info.}

\item{...}{additional arguments. Will be passed to \code{readLines()}}
}
\value{
a \code{plantuml} containing the yaml file for plotting
}
\description{
Exactly one of the two arguments (\code{file} or \code{text}) needs tobe specified.
}
\examples{
## some preparations
x1 <- "name: Test yml\na:\n- a\n- d\n- c\nB:\n- C\n- D\n- E\nx:\n  one: 0.2486851\n  two: 0.7498182\n"
x2 <- "name: Test yml\na:\n- a\n- b\n- c\nB:\n- C\n- D\n- E\nx:\n  one: 0.2486651\n  two: 0.7498182\n"
fn1 <- tempfile(fileext = ".yml")
fn2 <- tempfile(fileext = ".yml")
writeLines(x1, fn1)
writeLines(x2, fn2)

## and now the example

plot(plantuml_yaml(fn1))

## Now let's see the differences between `fn1` and `fn2`
## this requires the package `yaml` to be installed

if (require(yaml)) {
  plot(
    plantuml_yaml(
      file = fn1,
      preamble = diff_yaml_json(yaml::read_yaml(fn1), yaml::read_yaml(fn2))
   )
  )
}

## and cleanup

unlink(fn1)
unlink(fn2)

}
