% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.plantuml.R
\name{plot.plantuml}
\alias{plot.plantuml}
\title{Generate UML graph from plantuml}
\usage{
\method{plot}{plantuml}(x, file = NULL, width = 1024, height = NULL, css = NULL, ...)
}
\arguments{
\item{x}{plantuml code to draw the UML graph}

\item{file}{\itemize{
\item \strong{\code{file} is `NULL}: the graph is drawn in the graphics device.
\item \strong{\code{file} is a file name}: the graph is saved in the file and the type
is based on the extensions.
\item \strong{\code{file} is \code{NULL}}: the data which would have been saved in the file
is returned in a character vector. \strong{This is only useful for text formats
like \code{eps} or \code{svg}!}
}}

\item{width}{output width in pixels or NULL for default.}

\item{height}{output height in pixels or NULL for default}

\item{css}{path/url to external css file or raw vector with css data.
This requires your system has a recent version of librsvg.}

\item{...}{additional arguments for the \code{plot} function and the \code{plantuml_run} function.}
}
\value{
returns file name (including absolute path) of the created graph.
}
\description{
Generate an image containing based ion the plantuml code.
TODO can I use vector formats?
}
\examples{
plantumlCode <- '
 @startuml
 (*) --> "First Activity"
 -->[You can put also labels] "Second Activity"
 --> (*)
 @enduml
'
\dontrun{
x <- as.plantuml( plantumlCode )
plot( x )
plot(as.plantuml(x), java_opt = "-Djava.awt.headless=true")
}
}
