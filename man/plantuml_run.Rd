% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plantuml_run.R
\name{plantuml_run}
\alias{plantuml_run}
\title{Run the plantuml binary}
\usage{
plantuml_run(
  plantuml_jar = getPlantumlOption("jar_name"),
  plantuml_opt = "-help",
  java_bin = getPlantumlOption("java_bin"),
  java_opt = getPlantumlOption("java_opt"),
  stdout = "",
  stderr = "",
  stdin = "",
  input = NULL
)
}
\arguments{
\item{plantuml_jar}{path + filename to the plantuml jar file}

\item{plantuml_opt}{options for plantuml. The default is \code{-help} to show all
options of plantuml}

\item{java_bin}{path to the \code{java} binary. The dafaulkt is \code{java}, i;e; it
assumes that the binary is in the path}

\item{java_opt}{options for the call of \code{java}. The default is
\code{-Djava.awt.headless=true -splash:no} to enable a headless and silent
execution of plantuml}

\item{stdout}{See \code{system2()}}

\item{stderr}{See \code{system2()}}

\item{stdin}{See \code{system2()}}

\item{input}{See \code{system2()}}
}
\value{
the result from the call to \code{system2()}
}
\description{
The in the package installation included \code{plantuml} binary is executed using
the provided java and plantuml commands. This is effectively a wrapper around
\code{system2()} with some values set to run \code{plantuml}.
}
\examples{
\dontrun{
# This will take some time when you run it
# for the first time as it will download \code{plantuml.jar}
  plantuml_run()
}
}
